name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.5'

      - name: Build
        run: |
          make build

      - name: Read Release Notes
        id: read_release_notes
        run: |
          release_notes_file="release/${GITHUB_REF_NAME}.md"

          if [ -f "$release_notes_file" ]; then
            release_notes=$(cat "$release_notes_file")
          else
            echo "Release notes file $release_notes_file not found."
            exit 1
          fi

          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$release_notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_CI_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_CI_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./s3-cleanup
          asset_name: s3-cleanup
          asset_content_type: application/octet-stream
